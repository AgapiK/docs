openapi: 3.0.0
info:
  version: 1.0.0
  title: Epics API
  description: The API to manage stories, tasks, Sprint, and epics for Mendix apps which use the Epics story service.
  termsOfService: https://www.mendix.com/terms-of-use/
  contact:
    name: Mendix Support
    url: 'https://support.mendix.com'
    email: support@mendix.com
servers:
  - url: 'https://epics-api.mendix.com/v1'
paths:
  /projects/{appId}/statuses:
    get:
      tags:
        - statuses
      summary: Get statuses by app ID
      description: Returns an array of statuses
      operationId: getProjectStatuses
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statuses'
        '401':
          description: |-
            There were no usable authentication credentials found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: Credentials could not be authenticated.
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
  /projects/{appId}/stories:
    get:
      tags:
        - stories
      summary: Get stories by app ID
      description: Returns an array of stories
      operationId: getProjectStories
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: limit
          description: The maximum number of stories that can be returned per request. If the total stories retrieved is more than this limit, then we shall provide page links for retrieval of subsequent stories in the response.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 20
        - in: query
          name: offset
          description: The offset is the zero-based index of the first story to be returned on the page.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stories'
        '400':
          description: |-
            The request likely contains invalid data or is missing data.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 400
                title: Bad Request
                detail: Unsupported query parameter was used
        '401':
          description: |-
            There were no usable authentication credentials found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: Credentials could not be authenticated.
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
    post:
      tags:
        - stories
      summary: Create stories for an app
      description: Returns an array of created stories
      operationId: postProjectStories
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Create stories for an app
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                    example: Title of something to do
                  description:
                    type: string
                    example: A simple story description
                  storyType:
                    type: string
                    example: Feature
                    enum:
                      - Bug
                      - Feature
                  storyPoints:
                    type: integer
                    format: int64
                    minimum: 0
                    example: 5
                  storyLevel:
                    type: string
                    example: Active
                    enum:
                      - Active
                      - NextSprint
                      - InRefinement
                      - Backlog
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          format: int64
                          example: 200
                        story:
                          type: object
                          properties:
                            uuid:
                              type: string
                              format: uuid
                              example: 346a2cad-6b96-477a-9225-3957b73ctest
                            storyId:
                              type: string
                              example: TEST-1
        '207':
          description: partial successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          format: int64
                          example: 400
                        reason:
                          type: string
                          example: Unsupported story type
        '400':
          description: |-
            The request likely contains invalid data or is missing data.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Example 1:
                  value:
                    status: 400
                    title: Bad Request
                    detail: The request was malformed and could not be read
                Example 2:
                  value:
                    status: 400
                    title: Bad Request
                    detail: Please, no more than 50 stories per request
        '401':
          description: |-
            The required item could not be found.

            The error response gives additional feedback. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: The token is invalid
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
  /projects/{appId}/stories/{storyId}:
    patch:
      tags:
        - stories
      summary: Patch stories by story ID 
      description: Returns success 
      operationId: patchProjectStory
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: storyId
          description: Readable ID of the story
          required: true
          schema:
            type: string
      requestBody:
        description: Patch stories by story ID
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Title of something to do
                description: 
                  type: string
                  example: Update story description
                storyPoints:
                  type: integer
                  format: int64
                  minimum: 0
                  example: 5
                storyType:
                  type: string
                  example: Feature
                  enum:
                    - Bug
                    - Feature
                storyLevel:
                  type: string
                  example: Active
                  enum:
                    - Active
                    - NextSprint
                    - InRefinement
                    - Backlog
                storyStatus:
                  type: string
                  example: Done
      responses:
        '204':
          description: successful operation
        '400':
          description: |-
            The request likely contains invalid data or is missing data.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Example 1:
                  value:
                    status: 400
                    title: Bad Request
                    detail: The request is malformed and could not be read
                Example 2:
                  value:
                    status: 400
                    title: Bad Request
                    detail: The title of a story is required
                Example 3:
                  value:
                    status: 400
                    title: Bad Request
                    detail: Maximum 200 characters is allowed for Title 
                Example 4:
                  value:
                    status: 400
                    title: Bad Request
                    detail: The attribute "{attribute name} does not exist or you do not have access to it"
                Example 5:
                  value:
                    status: 400
                    title: Bad Request
                    detail: Invalid data type was used for "{attribute name}"
                Example 6:
                  value:
                    status: 400
                    title: Bad Request
                    detail: Invalid value was used for storyLevel.
                Example 7:
                  value:
                    status: 400
                    title: Bad Request
                    detail: The story cannot be moved to the active sprint, because there is no active sprint available for this project.
                Example 8:
                  value:
                    status: 400
                    title: Bad Request
                    detail: Story status is required when the story is active. 
                Example 9:
                  value:
                    status: 400
                    title: Bad Request
                    detail: The storyStatus does not exist for the project.
        '401':
          description: |-
            The required item could not be found.

            The error response gives additional feedback. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: Credentials could not be authenticated.
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
    get:
      tags:
        - stories
      summary: Get story by story ID
      description: Returns success
      operationId: getProjectStory
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: storyId
          description: Readable ID of the story
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story'
        '401':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: Credentials could not be authenticated.
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
  /projects/{appId}/epics:
    get:
      tags:
        - epics
      summary: Get epics by app ID
      description: Returns an array of epics
      operationId: getProjectEpics
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema: 
            type: string
            format: uuid
        - in: query
          name: limit
          description: The maximum number of epics that can be returned per request. If the total epics retrieved is more than this limit, then we shall provide page links for retrieval of subsequent epics in the response.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 20
        - in: query
          name: offset
          description: The offset is the zero-based index of the first epic to be returned on the page.
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0 
            default: 0
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epics'
        '400':
          description: |-
            The request likely contains invalid data or is missing data.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 400
                title: Bad Request
                detail: Unsupported query parameter was used.
        '401':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: Credentials could not be authenticated.
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
  /projects/{appId}/stories/{storyId}/tasks:
    get:
      tags:
        - tasks
      summary: Get tasks of a story by story ID and app ID
      description: Returns an array of tasks
      operationId: getStoryTasks
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema: 
            type: string
            format: uuid
        - in: path
          name: storyId
          description: Readable ID of the story
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks'
        '401':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: Credentials could not be authenticated.
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
    post:
      tags:
        - tasks
      summary: Create tasks for a story 
      description: Returns an array of created tasks
      operationId: postStoryTasks
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema: 
            type: string
            format: uuid
        - in: path
          name: storyId
          description: Readable ID of the story
          required: true
          schema: 
            type: string
      requestBody:
        description: successful operation
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                    example: Title of something to do
                  isDone:
                    type: boolean
                    example: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          format: int64
                          example: 200
                        task:
                          type: object
                          properties:
                            uuid:
                              type: string
                              example: 346a2cad-6b96-477a-9225-3957b73ctest 
        '207':
          description: partial successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          format: int64
                          example: 400
                        reason:
                          type: string
                          example: The title of a task is required.
        '400':
          description: |-
            The request likely contains invalid data or is missing data.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Example 1:
                  value:
                    status: 400
                    title: Bad Request
                    detail: The request is malformed and could not be read
                Example 2:
                  value:
                    status: 400
                    title: Bad Request
                    detail: Please, no more than 50 tasks per request
        '401':
          description: |-
            There were no usable authentication credentials found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: Credentials could not be authenticated.
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
  /projects/{appId}/labels:
    get:
      tags:
        - labels
      summary: Get labels by app ID
      description: Returns an array of labels
      operationId: getProjectLabels
      parameters:
        - in: path
          name: appId
          description: ID of the app
          required: true
          schema: 
            type: string
            format: uuid
        - in: query
          name: limit
          description: The maximum number of labels that can be returned per request. If the total labels retrieved is more than this limit, then we shall provide page links for retrieval of subsequent labels in the response.
          required: false
          schema: 
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 20
        - in: query
          name: offset
          description: The offset is the zero-based index of the first label to be returned on the page.
          required: false
          schema: 
            type: integer
            format: int64
            minimum: 0
            maximum: 0
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/labels'
        '400':
          description: |-
            The request likely contains invalid data or is missing data.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 400
                title: Bad Request
                detail: Unsupported query parameter was used.
        '401':
          description: |-
            There were no usable authentication credentials found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 401
                title: Unauthorized
                detail: Credentials could not be authenticated.
        '404':
          description: |-
            The required item could not be found.

            The error response gives additional feedback.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              example:
                status: 404
                title: Not Found
                detail: The app does not exist or you do not have access to it
components:
  parameters:
    storyId:
      name: storyId
      in: path
      description: Readable ID of the story
      required: true
      schema:
        type: string
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int64
        minimum: 1
        maximum: 100
        default: 20
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        format: int64
        minimum: 0
        default: 0
  schemas:
    error:
      type: object
      properties:
        status:
          type: integer
          minimum: 0
          example: 400
        title:
          type: string
          example: Bad Request
        detail:
          type: string
          example: Malformed request body
    links:
      type: array
      items:
        type: object
        properties:
          rel:
            type: string 
            example: current
            enum:
              - first
              - previous
              - current
              - next
              - last
          hRef:
            type: string
            format: url
            example: "https://epics-api.mendix.com/v1/projects/346a2cad-6b96-477a-9225-3957b73ctpro/{tag}?limit=20&offset=120"
    statuses:
      type: object
      properties:
        statuses:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: Done
              sortId:
                type: integer
                format: int64
                example: 0
    story:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 346a2cad-6b96-477a-9225-3957b73ctest
        storyId:
          type: string
          example: TEST-1
        sortId:
          type: integer
          format: int64
          minimum: 0
          example: 0
        title:
          type: string
          example: Title of something to do
        descriptionHTML:
          type: string
          format: html
          example: <p>A simple story description</p>
        descriptionPlain:
          type: string
          example: A simple story description
        storyPoints:
          type: integer
          format: int64
          minimum: 0
          example: 5
        storyType:
          type: string
          example: Feature
          enum:
            - Bug
            - Feature
        storyLevel:
          type: string
          example: Active
          enum:
            - Active 
            - NextSprint
            - InRefinement
            - Backlog
        numberOfTasks:
          type: integer
          format: int64
          example: 1
        status:
          type: string
          example: Done
    stories:
      type: object
      properties:
        stories:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
                example: 346a2cad-6b96-477a-9225-3957b73ctest
              storyId:
                type: string
                example: TEST-1
              sortId:
                type: integer
                format: int64
                minimum: 0
                example: 0
              title:
                type: string
                example: "Title of something to do"
              descriptionHTML:
                type: string
                format: html 
                example: <p>A simple story description</p>
              descriptionPlain:
                type: string
                example: A simple story description
              storyPoints:
                type: integer
                format: int64
                minimum: 0
                example: 5
              storyType:
                type: string
                example: Feature
                enum:
                  - Bug
                  - Feature
              storyLevel:
                type: string
                example: Active
                enum:
                  - Active
                  - NextSprint
                  - InRefinement
                  - Backlog
              numberOfTasks:
                type: integer
                format: int64
                example: 1
              status:
                type: string
                example: Done
        totalStories:
          type: integer
          format: int64
          example: 1
        links: 
          $ref: '#/components/schemas/links'
        limit:
          type: integer
          format: int64
          example: 20
          minimum: 0
          maximum: 100
        offset:
          type: integer
          format: int64
          minimum: 0
          example: 0
    epics:
      type: object
      properties:
        epics:
          type: array
          items:
            type: object
            properties:
              epicId:
                type: string
                example: 'EPI-TEST-1'
              name:
                type: string
                example: Public API Initiative
              objective:
                type: string
                example: ability to change stories programatically
              numberOfStories:
                type: integer
                format: int64
                minimum: 0
                example: 4
              numberOfStoryPoints:
                type: integer
                format: int64
                minimum: 4
                example: 24
        totalEpics:
          type: integer
          format: int64
          minimum: 0
          example: 240
        links:
          $ref: '#/components/schemas/links'
        limit:
          type: integer
          format: int64
          example: 20
          minimum: 0
          maximum: 100
        offset:
          type: integer
          format: int64
          minimum: 0
          example: 0
    labels:
      type: object
      properties:
        labels:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
                example: 346a2cad-6b96-477a-9225-3957b73ctest
              name:
                type: string
                example: Add post endpoint to generate resources
        totalLabels:
          type: integer
          format: int64
          minimum: 0
          example: 240
        links:
          $ref: '#/components/schemas/links'
        limit:
          type: integer
          format: int64
          example: 20
          minimum: 0
          maximum: 100
        offset:
          type: integer
          format: int64
          minimum: 0
          example: 0
    tasks:
      type: object
      properties:
        tasks:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: Title of something to do
              isDone:
                type: boolean
                example: false
              sortId:
                type: integer
                format: int64
                example: 0
  securitySchemes:
    PersonalAccessToken:
      name: Authorization
      type: apiKey
      in: header
      description: 'For more information about requesting and using a token see the [documentation](https://docs.mendix.com/developerportal/community-tools/mendix-profile/#pat).<br/> The header must be set to `MxToken <Your PAT>`.'        
tags:
  - name: epics
  - name: labels
  - name: statuses
  - name: stories
  - name: tasks
security:
  - PersonalAccessToken: []
