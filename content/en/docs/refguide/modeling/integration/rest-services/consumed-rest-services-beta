---
title: "Consumed REST Services (beta)”
url: /refguide/consumed-rest-services-beta/
category: "Integration"
description: "Describes the configuration and usage of the new Consumed REST service.”
tags: ["Consumed REST service", "mendix 10", "studio pro 10", "GET", "POST", "new"]
#If moving or renaming this doc file, implement a temporary redirect and let the respective team know they should update the URL in the product. See Mapping to Products for more details. 
---

## 1 Introduction

Use the new Consumed REST service to send REST requests from Studio Pro. With this feature, you can build, test, and create data structures to store your requests. 

This feature is supported for [Studio Pro 10.6](add link) and above.

### 1.1 Use Cases

You can use this Consumed REST service to do the following:

* Consume a REST service
* Configure GET and POST requests
* Create entities directly in the domain model
* Send REST requests through a microflow

### 1.2 Limitations

*This feature supports the following HTTP request methods:
 *GET
 *POST
* To use the request response to create a data structure in your domain model, the response data should be in JSON format. Other formats, such as XML, are currently not supported. 
* If you are debugging a running Published REST service in the same app as your Consumed REST service document, a timeout issue will occur when sending the request.

### 1.3 Prerequisites 

*[Studio Pro 10.6](add link) and above
* Familiarity with [HTTP request methods]( https://www.w3schools.com/tags/ref_httpmethods.asp)

## 2 Installation 

Download [Studio Pro]( https://marketplace.mendix.com/link/studiopro/) and add the Consumed REST service document to your app. To do this, 
1.	Right-click the module you want to add the Consumed REST service document to.
2.	Select **Add other** > **Consumed REST service**. 
3.	Name the service and click **OK**.

(add screenshot)

## 3 Configuration 

Use the Consumed REST service to configure a GET or POST request for your app. 

### 3.1 Basic Configuration 

Create a GET or POST request to send data to your server by doing the following:
1.	In the **General** field, name your request. 
2.	In the **Method & URL** field, use drop-down to select the HTTP method you want to use.
3.	Add an endpoint and click **Send**.

(add screenshot)

4.	Click **Configuration & authentication**.
5.	Add a **Base URL** to use the same URL across all requests in this consumed REST service.

(add screenshot)

6.	Select an authentication method. For more information, see [Authentication methods](#authentication).
7.	Click **Send**. 

You can visualize your request in the **Response data** tab, then use the response to [create an entity in the domain model]{#create-an-entity}. 

### 3.2 Authentication Methods

You can configure basic authentication to use for all requests in your document. Authentication is not required but can be added if needed. To add basic authentication, do the following:

1.	 Click **Configuration & authentication**.
2.	Under **Authentication method**, click the drop-down and select **Basic authentication**. 

(add screenshot)

3.	Select a constant or create a new one for your username and password. To create a new constant, follow these steps:
 1.	Next to **Username** or **Password**, click **Select** > **New**.
 2.	Name the constant and click **OK**
4.	Add any additional information needed and click **OK** > **OK**.

### 3.3 Adding Parameters 

Parameters are fully supported in the path & query part of the URL. They are defined within curly brackets in the URL (for example, ‘http://numbersapi.com/{numbers}’). All parameters must be added to the **Parameters** grid and match what is present within the curly brackets.

(add screenshot) 

To add a parameter, follow these steps:

1.	Open the **Parameters** tab and click **Add** 
2.	Name your parameter, add a test value, and click **OK**

(add screenshot)

3. Click **Send** to test the parameters. 

### 3.4 Adding Headers

### 3.5 Adding a Request Body

### 3.6 Creating an Entity from the Response

### 3.7 Using a REST Request in a Microflow 

